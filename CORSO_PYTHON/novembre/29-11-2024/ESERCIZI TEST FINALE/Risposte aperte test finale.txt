3.Quale il meccanismo delle classi e degli oggetti del OOP? come funziona? che pezzi DEVE avere la classe?

In Python, le classi sono fondamentali per la programmazione orientata agli oggetti (OOP).
Le classi consentono di definire strutture che raggruppano dati (attributi) e comportamenti (metodi) correlati in un unico oggetto di un determinato tipo.

Le classi sono un'astrazione dei concetti del mondo reale e una classe è un modello per la creazione di oggetti.
Un oggetto è un'istanza di una classe, cioè una copia univoca della classe che ha le sue proprietà uniche.
Le classi sono definite usando la parola chiave class, seguita dal nome della classe.
Le classi possono contenere metodi e attributi.

Gli attributi sono variabili associate a una classe, rappresentano le proprietà di un oggetto e sono condivisi tra tutte le istanze della classe.
I metodi sono funzioni associate a una classe e rappresentano il comportamento di un oggetto.

Le classi, contengono anche un metodo costruttore, così chiamato perché definisce le caratteristiche principali dell'oggetto.

Per esempio:

class Nomeclasse():
def __init__(self, ValoreAttributo):
self.Attributo = ValoreAttributo

6.Cos'è e quali sono le le fasi del ML (6)

Il Machine Learning è un ramo
dell'intelligenza artificiale che
permette ai computer di imparare dai
dati e migliorare autonomamente
attraverso l'esperienza.



Il suo obbiettivo è Automatizzare
processi decisionali basandosi su
pattern e inferenze piuttosto che su
istruzioni esplicite.
Fasi:
1.
Caricamento e Preparazione dei Dati:
Utilizza dataset forniti o carica i tuoi dati.
Preprocessa i dati per pulirli e
normalizzarli, rendendoli adatti all'analisi.
2.
Divisione del Dataset:
Suddivide i dati in set di training e test per
costruire e valutare il modello.
3.
Selezione del Modello:
Scegli un algoritmo appropriato in base al
problema (es. regressione, classificazione,
clustering).
4. 
Addestramento del Modello:
Utilizza il metodo .fit() per addestrare il
modello sui dati di training.
5.
Predizione:
Applica il modello addestrato ai dati di test o
nuovi dati usando .predict().
6. 
Valutazione del Modello:
Valuta le prestazioni del modello con metriche
appropriate (es. accuratezza, errore quadratico
medio).

